/*
回调函数：本质是通过函数指针调用的函数，如函数1作为参数传递给函数2，函数1叫做回调函数，函数2叫做中间函数，调用2的函数叫做起始函数.

回调示例（来自知乎）：

有一家旅馆提供叫醒服务，但是要求旅客自己决定叫醒的方法。可以是打客房电话，也可以是派服务员去敲门，睡得死怕耽误事的，还可以要求往自己头上浇盆水。
这里，“叫醒”这个行为是旅馆提供的，相当于中间函数，但是叫醒的方式是由旅客决定并告诉旅馆的，也就是回调函数。而旅客告诉旅馆怎么叫醒自己的动作，
也就是把回调函数传入中间函数的动作，称为登记回调函数（to register a callback function）

你到一个商店买东西，刚好你要的东西没有货，于是你在店员那里留下了你的电话，过了几天店里有货了，店员就打了你的电话，然后你接到电话后就到店里去取了货。
在这个例子里， 你的电话号码就叫回调函数 ，你把电话留给店员就叫登记回调函数，店里后来有货了叫做触发了回调关联的事件 ，店员给你打电话叫做调用回调函数 ，
你到店里去取货叫做响应回调事件 。

回调函数类型：
1. 阻塞式回调（同步回调）(下面这个例子就是阻塞式回调)
2. 延迟式回调（异步回调）

知乎上关于回调的理解不错的帖子: https://www.zhihu.com/question/19801131
*/

package main

import "fmt"

//回调函数
func XX(x int) int {
	return x * x
}

//中间函数
//接受一个生成平方数的函数作为参数
func returnXXNumber(x int, getXXNumber func(int) int) int {
	return getXXNumber(x)
}

//起始函数
func main() {
	x := 2
	fmt.Println(returnXXNumber(x, XX))
}

